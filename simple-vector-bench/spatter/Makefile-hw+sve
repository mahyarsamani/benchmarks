CC = gcc
CXX = g++
OUTPUT_PATH ?= .
OUTPUT_SUFFIX = .hw.sve
CFLAGS_KERNELS = -O3 -fopenmp -ftree-vectorize -march=armv8.1-a+sve
CXXFLAGS_MAIN = -O3 -fopenmp
LDFLAGS = -O3 -fopenmp
JSON_LIBRARY_INCLUDE = ../json/single_include/nlohmann/

CXXFLAGS_MAIN += -I$(JSON_LIBRARY_INCLUDE)

all: spatter

scatter_gather_kernels$(OUTPUT_SUFFIX).o: scatter_gather_kernels.c
	$(CC) $(CFLAGS_KERNELS) -c scatter_gather_kernels.c -o $(OUTPUT_PATH)/scatter_gather_kernels$(OUTPUT_SUFFIX).o

spatter$(OUTPUT_SUFFIX).o: spatter.cpp
	$(CXX) $(CXXFLAGS_MAIN) -c spatter.cpp -o $(OUTPUT_PATH)/spatter$(OUTPUT_SUFFIX).o

spatter: scatter_gather_kernels$(OUTPUT_SUFFIX).o spatter$(OUTPUT_SUFFIX).o
	$(CXX) spatter$(OUTPUT_SUFFIX).o scatter_gather_kernels$(OUTPUT_SUFFIX).o -o $(OUTPUT_PATH)/spatter$(OUTPUT_SUFFIX) $(LDFLAGS)

clean:
	rm -f *$(OUTPUT_SUFFIX).o spatter$(OUTPUT_SUFFIX)

